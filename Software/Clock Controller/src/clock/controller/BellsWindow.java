/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clock.controller;

import java.util.Timer;
import java.util.TimerTask;

/**
 *
 * @author joshualange
 */
public class BellsWindow extends javax.swing.JFrame {

    MainWindow mw;
    private ClockProtocolCoder theProtocolCoder;

    /**
     * Get the value of theProtocolCoder
     *
     * @return the value of theProtocolCoder
     */
    public ClockProtocolCoder getTheProtocolCoder() {
        return theProtocolCoder;
    }

    /**
     * Set the value of theProtocolCoder
     *
     * @param theProtocolCoder new value of theProtocolCoder
     */
    public void setTheProtocolCoder(ClockProtocolCoder theProtocolCoder) {
        this.theProtocolCoder = theProtocolCoder;
    }

    public BellsWindow(ClockProtocolCoder theProtocolCoder) {
        this.theProtocolCoder = theProtocolCoder;
    }

    /**
     * Creates new form BellsWindow
     */
    public BellsWindow() {
        initComponents();
    }

    public void setMw(MainWindow mw) {
        this.mw = mw;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        startRingingButton = new javax.swing.JButton();
        stopRingingButton = new javax.swing.JButton();
        ringForTimeButton = new javax.swing.JButton();
        ringTimeSpinner = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        bellNumberSpinner = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Bell Controller");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        startRingingButton.setText("Start Ringing");
        startRingingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startRingingButtonActionPerformed(evt);
            }
        });

        stopRingingButton.setText("Stop Ringing");
        stopRingingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopRingingButtonActionPerformed(evt);
            }
        });

        ringForTimeButton.setText("Ring For");
        ringForTimeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ringForTimeButtonActionPerformed(evt);
            }
        });

        ringTimeSpinner.setModel(new javax.swing.SpinnerNumberModel(5, 1, 99, 1));

        jLabel1.setText("Seconds");

        jLabel2.setText("Bell Number");

        bellNumberSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 8, 1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(startRingingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stopRingingButton)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ringForTimeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ringTimeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bellNumberSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(startRingingButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stopRingingButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ringForTimeButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ringTimeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(bellNumberSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startRingingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startRingingButtonActionPerformed
        if (theProtocolCoder != null) {
            boolean[] outArray = getArrayForOutput((Integer) bellNumberSpinner.getValue(), true);
            theProtocolCoder.setOutputs(outArray);

        }
    }//GEN-LAST:event_startRingingButtonActionPerformed

    private void ringForTimeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ringForTimeButtonActionPerformed
        if (theProtocolCoder != null) {
            boolean[] outArray = getArrayForOutput((Integer) bellNumberSpinner.getValue(), true);
            theProtocolCoder.setOutputs(outArray);

            Timer t = new Timer();
            TimerTask tt = new TimerTask() {

                @Override
                public void run() {
                    if (theProtocolCoder != null) {
                        boolean[] outArray = getArrayForOutput((Integer) bellNumberSpinner.getValue(), false);
                        theProtocolCoder.setOutputs(outArray);

                    }
                }
            };// TODO add your handling code here:
            t.schedule(tt, (Integer) ringTimeSpinner.getValue() * 1000);
        }
    }//GEN-LAST:event_ringForTimeButtonActionPerformed

    private void stopRingingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopRingingButtonActionPerformed
        if (theProtocolCoder != null) {
            boolean[] outArray = getArrayForOutput((Integer) bellNumberSpinner.getValue(), false);
            theProtocolCoder.setOutputs(outArray);

        }
    }//GEN-LAST:event_stopRingingButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (mw != null) {
            mw.setVisible(true);
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BellsWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BellsWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BellsWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BellsWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new BellsWindow().setVisible(true);
            }
        });
    }

    private boolean[] getArrayForOutput(int output, boolean value) {
        if (output > 0 && output < 9) {
            boolean[] outArray = {false, false, false, false, false, false, false};
            //physical outputs are 1-indexed
            outArray[output - 1] = value;
            return outArray;
        }
        return null;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner bellNumberSpinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton ringForTimeButton;
    private javax.swing.JSpinner ringTimeSpinner;
    private javax.swing.JButton startRingingButton;
    private javax.swing.JButton stopRingingButton;
    // End of variables declaration//GEN-END:variables
}
